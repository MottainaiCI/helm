# Default values for mottainai.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
artefactsVolumeSize: "100Gi"
namespaceVolumeSize: "200Gi"
redisVolumeSize: "100Mi"
arangoVolumeSize: "100Mi"
dbVolumeSize: "10Gi"
storagesVolumeSize: "5Gi"
storageClass: longhorn
image:
  repository: "quay.io/mottainai/server:latest"
  pullPolicy: IfNotPresent
  tag: latest
  fileIndex: "quay.io/mocaccino/nginx-file-browser:latest"

fsGroup: 500
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

fileIndex:
  enabled: true
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    enabled: false
    hosts:
      - host: chart-example.local
        paths: []
    tls: []
arangodb:
  enabled: false

persistent_artefacts:
  enabled: false

persistent_namespaces:
  enabled: false
redis:
  password: "changeme"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  redisType: ClusterIP
  port: 80
  redisPort: 6379
  #redisExternalIPs:
  #-
  #-

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: mottainaici/server
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

probes:
  readiness:
    enabled: true
    initialDelaySeconds: 900
    periodSeconds: 20
    failureThreshold: 10
  liveness:
    enabled: true
    initialDelaySeconds: 900
    failureThreshold: 10
    periodSeconds: 10
  startup:
    enabled: true
    failureThreshold: 90
    initialDelaySeconds: 10
    periodSeconds: 10
nodeSelector: {}

tolerations: []

affinity: {}
